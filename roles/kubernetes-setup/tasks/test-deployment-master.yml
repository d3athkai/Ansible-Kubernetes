---
  ###
  ###
  # TEST DEPLOYMENT OF NGINX WITH NODEPORT
  ###
  ###
  - name: Create NGINX Deployment
    become: yes
    become_user: "{{ kubernetes_user }}"
    shell: kubectl create deployment nginx --image=nginx:stable-alpine
    ignore_errors: yes

  - name: Create NGINX service
    become: yes
    become_user: "{{ kubernetes_user }}"
    shell: kubectl expose deployment nginx --port 80 --target-port 80 --type NodePort
    ignore_errors: yes

  - name: Waiting for deployment of NGINX to get ready...
    pause:
      seconds: 25

  - name: Get deployments
    become: yes
    become_user: "{{ kubernetes_user }}"
    shell: kubectl get deployments
    register: kubectl_get_deployments

  - name: Verify deployments
    debug: msg="{{ kubectl_get_deployments.stdout_lines }}"

  - name: Get service
    become: yes
    become_user: "{{ kubernetes_user }}"
    shell: kubectl get service
    register: kubectl_get_service

  - name: Verify service
    debug: msg="{{ kubectl_get_service.stdout_lines }}"


  ###
  ###
  # DELETE DEPLOYMENT OF NGINX WITH NODEPORT
  ###
  - name: Delete deployment of NGINX with NodePort
    become: yes
    become_user: "{{ kubernetes_user }}"
    block:
      - name: Delete NGINX service
        shell: kubectl delete service nginx

      - name: Delete NGINX Deployment
        shell: kubectl delete deployment nginx
        when: delete_deployment_after_testing == true

      - name: Get deployments
        shell: kubectl get deployments
        register: kubectl_get_deployments

      - name: Verify deployments
        debug: msg="{{ kubectl_get_deployments.stdout_lines }}"

      - name: Get service
        shell: kubectl get service
        register: kubectl_get_service

      - name: Verify service
        debug: msg="{{ kubectl_get_service.stdout_lines }}"
    when: delete_deployment_after_testing == true
